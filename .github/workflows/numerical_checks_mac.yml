# Run these tests automatically on Github
# on every push and pull request.
name: NumericalTestsMac
on: [push, pull_request]

# We run in a bash shell
defaults:
  run:
    shell: bash

# First build stella, and then perform python tests
jobs:


#-----------------------------------------------------------------------
#                         Build stella with Make                        
#-----------------------------------------------------------------------
  compile-stella-make:
    name: "Build stella on mac (Make)"  
    runs-on: macos-latest
    
    # Set system variables
    env:
      OMPI_MCA_rmaps_base_oversubscribe: yes
      MPIRUN: mpiexec -np 
      STELLA_SYSTEM: macosx-github
      
    steps:

      # Install dependencies brew install gfortran
      - name: Install dependencies
        run: brew install gcc@11 make openmpi fftw netcdf-fortran
      
      # Make the gfortran command available
      - name: Symlink gfortran (macOS)
        if: runner.os == 'macOS'
        run: | 
          sudo ln -s /usr/local/bin/gfortran-11 /usr/local/bin/gfortran
          sudo mkdir /usr/local/gfortran
          sudo ln -s /usr/local/Cellar/gcc@11/*/lib/gcc/11 /usr/local/gfortran/lib
          gfortran --version

      # Check-out repository under $GITHUB_WORKSPACE
      - name: Check out repository
        uses: actions/checkout@v4 
          
      # Build stella executable with make
      - name: Build stella (make) 
        run: |
          git submodule update --init --recursive
          make -j 1
          
      # Upload stella 
      - name: Upload stella 
        uses: actions/upload-artifact@v4
        with:
          name: stella-executable-macos-make
          path: stella
          retention-days: 1


#-----------------------------------------------------------------------
#                         Build stella with CMake                        
#-----------------------------------------------------------------------
  compile-stella-cmake:
    name: "Build stella on mac (CMake)"  
    runs-on: macos-13
    env:
      OMPI_MCA_rmaps_base_oversubscribe: yes
      MPIRUN: mpiexec -np 
      
    steps:

      # Install dependencies brew install gfortran
      - name: Install dependencies
        run: brew install gcc@11 make openmpi fftw netcdf-fortran
      
      # Make the gfortran command available
      - name: Symlink gfortran (macOS)
        if: runner.os == 'macOS'
        run: | 
          sudo ln -s /usr/local/bin/gfortran-11 /usr/local/bin/gfortran
          sudo mkdir /usr/local/gfortran
          sudo ln -s /usr/local/Cellar/gcc@11/*/lib/gcc/11 /usr/local/gfortran/lib
          gfortran --version

      # Print system information
      - name: System information
        run: |
          echo " "; echo "System information:"; echo "$(cat /etc/*release | sed 's/^/  /')"
          echo " "; echo "Gfortran version:"; echo "$(gfortran --version | sed 's/^/  /')"
          echo " "; echo "Netcdf version:"; echo "$(nf-config --all | sed 's/^/  /')"
          echo " "; echo "Clang version:"; echo "$(clang --version | sed 's/^/  /')"

      # Check-out repository under $GITHUB_WORKSPACE
      - name: Check out repository
        uses: actions/checkout@v4
          
      # Check $GITHUB_WORKSPACE
      - name: Check Github Workspace
        run: | 
          echo " "; echo "Running directory:"; echo "  $(pwd)"
          echo " "; echo "Files in directory:"; echo "$(ls -la | sed 's/^/  /')"

      # Set-up cmake
      - name: Set-up CMake
        run: | 
          git submodule update --init --recursive
          cmake . -B COMPILATION/build_cmake  
          echo " "; echo "--------- DIRECTORIES ----------"
          cat COMPILATION/build_cmake/CMakeCache.txt

      # Build stella executable with cmake
      - name: Build stella (CMake)
        run: | 
          cmake --build COMPILATION/build_cmake -j 12 
          
      # Upload stella 
      - name: Upload stella 
        uses: actions/upload-artifact@v4
        with:
          name: stella-executable-macos-cmake
          path: stella
          retention-days: 1


#-----------------------------------------------------------------------
#                             Python tests                              
#-----------------------------------------------------------------------

  # Run automatic python tests, after stella has been compiled
  numerical-tests: 
    needs: compile-stella-cmake
    runs-on: macos-13
    env:
      OMPI_MCA_rmaps_base_oversubscribe: yes
      MPIRUN: mpiexec -np 
    
    # Run the same set-up multiple times
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: "1 - Does stella run "
          - name: "2 - Geometry"
          - name: "3 - Gyrokinetic equation"
          - name: "4 - Flux tube"
          - name: "5 - Diagnostics"
      
    steps:

      # Install dependencies
      - name: Install dependencies
        run: brew install gcc@11 make openmpi fftw netcdf-fortran gnu-sed
      
      # Make the gfortran command available
      - name: Symlink gfortran (macOS)
        if: runner.os == 'macOS'
        run: | 
          sudo ln -s /usr/local/bin/gfortran-11 /usr/local/bin/gfortran
          sudo mkdir /usr/local/gfortran
          sudo ln -s /usr/local/Cellar/gcc@11/*/lib/gcc/11 /usr/local/gfortran/lib
          gfortran --version

      # Check-out repository under $GITHUB_WORKSPACE
      - name: Check out repository
        uses: actions/checkout@v4

      # Download stella executable from previous job
      - name: Download stella 
        uses: actions/download-artifact@v4
        with:
           name: stella-executable-macos-cmake
           
      # Make stella executable and run on 4 processors
      - name: Make stella executable
        run: |
            echo " "; echo "Make stella executable:"
            chmod +x stella
            echo " "; echo "Running directory:"; echo "  $(pwd)"
            echo " "; echo "Files in directory:"; echo "$(ls -la | sed 's/^/  /')"
            gsed -i 's/nproc = 16/nproc = 4/g' AUTOMATIC_TESTS/config.ini
          
      # Install python environment
      - name: Install python virtual environment
        run: pip3 install --user -r AUTOMATIC_TESTS/requirements.txt

      # Perform python tests 1
      - name: Numerical python tests 1 - Does stella run
        if: ${{ contains(matrix.config.name, '1 -') }}
        run: export STELLA_SYSTEM=macosx-github; make numerical-tests-1

      # Perform python tests 2
      - name: Numerical python tests 2 - Geometry
        if: ${{ contains(matrix.config.name, '2 -') }}
        run: export STELLA_SYSTEM=macosx-github; make numerical-tests-2

      # Perform python tests 3
      - name: Numerical python tests 3 - Gyrokinetic equation
        if: ${{ contains(matrix.config.name, '3 -') }}
        run: export STELLA_SYSTEM=macosx-github; make numerical-tests-3

      # Perform python tests 4
      - name: Numerical python tests 4 - Flux tube
        if: ${{ contains(matrix.config.name, '4 -') }}
        run: export STELLA_SYSTEM=macosx-github; make numerical-tests-4

      # Perform python tests 5
      - name: Numerical python tests 5 - Diagnostics
        if: ${{ contains(matrix.config.name, '5 -') }}
        run: export STELLA_SYSTEM=macosx-github; make numerical-tests-5




