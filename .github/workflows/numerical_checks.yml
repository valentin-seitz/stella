# Run these tests automatically on Github
# on every push and pull request.
name: NumericalTestsCookie
on: [push, pull_request]

# We run the in a bash shell
defaults:
  run:
    shell: bash

# Define the tests, for now we only have <standard_tests>
# where we define 3 seperate workflows in matrix/config/name
# For each of these workflows we need to perform the same
# initial steps: <Install dependencies>, <System information>
# Next, only the step corresponding to the test will be executed.
jobs:

  # Build stella with Make  
  compile-stella:
    name: "Run stella and check the outputs numerically" 
    runs-on: ubuntu-latest
    env:
      OMPI_MCA_rmaps_base_oversubscribe: yes
      MPIRUN: mpiexec -np
      
    steps:
    
      # Install packages needed for stella compilation
      - name: Install dependencies
        run: sudo apt update &&
             sudo apt install -y
                 gfortran
                 make
                 libfftw3-dev
                 libnetcdf-dev
                 libnetcdff-dev
                 netcdf-bin
                 python3
                 python3-pip
                 openmpi-bin
                 libopenmpi-dev

      # Check the system information		
      - name: System information
        run: |
          cat /etc/*release
          gfortran --version
          nf-config --all
          
      # Check $GITHUB_WORKSPACE
      - name: Check GITHUB_WORKSPACE
      	run: pwd && ls -la
      	
      # Check-out repository under $GITHUB_WORKSPACE
      - name: Check out repository
      	uses: actions/checkout@v4
          
      # Check $GITHUB_WORKSPACE
      - name: Check GITHUB_WORKSPACE
      	run: pwd && ls -la

	  # Compile stella	
      - name: Build stella  
        run: |
          set -ex
          export STELLA_SYSTEM=gnu_ubuntu
          git submodule update --init --recursive
          make -I Makefiles -j12

      # Upload stella			
      - name: Upload stella 
        uses: actions/upload-artifact@v4
        with: 
          event-type: event-compiled-stella 
          name: stella-executable
          path: stella
          retention-days: 1 

  # Run automatic python tests, after stella has been compiled
  numerical-tests:
    name: "Run stella and check the outputs numerically" 
    needs: compile-stella
    runs-on: ubuntu-latest
    env:
      OMPI_MCA_rmaps_base_oversubscribe: yes
      MPIRUN: mpiexec -np

    steps:
    
      # Install packages needed for stella compilation
      - name: Install dependencies
        run: sudo apt update &&
             sudo apt install -y
                 gfortran
                 make
                 libfftw3-dev
                 libnetcdf-dev
                 libnetcdff-dev
                 netcdf-bin
                 python3
                 python3-pip
                 openmpi-bin
                 libopenmpi-dev
          
      # Check $GITHUB_WORKSPACE
      - name: Check GITHUB_WORKSPACE
      	run: pwd && ls -la
      	
      # Check-out repository under $GITHUB_WORKSPACE
      - name: Check out repository
      	uses: actions/checkout@v2
          
      # Check $GITHUB_WORKSPACE
      - name: Check GITHUB_WORKSPACE
      	run: pwd && ls -la

	  # Install python environment
      - name: Install automated stella test dependencies
        run: pip3 install --user -r AUTOMATIC_TESTS/requirements.txt

	  # Download stella
      - name: Download stella 
        uses: actions/download-artifact@v4
        with:
    		name: stella-executable
          
      # Check $GITHUB_WORKSPACE
      - name: Check GITHUB_WORKSPACE
      	run: pwd && ls -la

      # Perform python tests		
      - name: Perform numerical tests for stella with Python
        run: |
          set -ex
          export STELLA_SYSTEM=gnu_ubuntu
          make -I Makefiles numerical-tests
        
